COMMAND GUIDE (thus far)

Basic commands
      ls              shows files and folders in directory
      ls –a          shows hidden directory
      ll               shows everything in directory with details (date, etc.)
      cd              home
      cd .            current directory
      ..                go up a directory

GIT
      Git init → turns a directory into a git repository so the information get saved = makes a git repo
      Git status → check the status (modified?, commited?, untracked files?)
      Git add → track a file
      git commit -m "xx” to add a comment about the file (use present tense!)
            once changes are made, the file has to be added again
      git log → overview of what changes have been made
      git remove → untrack a file
       git checkout + that loooong number → to look at a certain version
       git checkout master → to get to the actual file
       q to quit
       git reset –hard → to change the past
       git remote –v → shows origin and where it’s going to go
       git (command) push (push to cloud) origin (name of the folder on git) master (default branch name for a git repo)
      git commit -a                   will git add & commit im one move- but only for modified files, not for untracked files
...
Show full text
o Git init → turns a directory into a git repository so the information get saved = makes a git repo
o Git status → get an explanation
o Ls –a → shows hidden directory
o Git add → track a file
o Git remove → untrack a file
o git commit -m "xx” to add a comment about the file (use present tense!)
o once changes are made, the file has to be added again
o git log → overview of what changes have been made
o git checkout + that loooong number → to look at a certain version
o git checkout master → to get to the actual file
o q to quit
o git reset –hard → to change the past
o git remote –v → shows origin and where it’s going to go
o git (command) push (push to cloud) origin (name of the folder on git) master (default branch name for a git repo)
o
...
Show full text
o Git init → turns a directory into a git repository so the information get saved = makes a git repo
o Git status → get an explanation
o Ls –a → shows hidden directory
o Git add → track a file
o Git remove → untrack a file
o git commit -m "xx” to add a comment about the file (use present tense!)
o once changes are made, the file has to be added again
o git log → overview of what changes have been made
o git checkout + that loooong number → to look at a certain version
o git checkout master → to get to the actual file
o q to quit
o git reset –hard → to change the past
o git remote –v → shows origin and where it’s going to go
o git (command) push (push to cloud) origin (name of the folder on git) master (default branch name for a git repo)
o
  git remote add upstream  → add additional connection
o pull from upstream, push to origin
o git pull upstream master → to refresh all the changes that were made on the master file
o :: xxx: class method
o # xxx: instance method
o .split → splits strings
o .length → counts the characters
o .gsub → global substitution
o matador → xx.xx! changes it permanently
o xx_id → where the variable is stored
o a + = b → a = a + b
o += → to add different strings together




Day 5 Classwork

sudo apt-get install tree
    password
    tree

git log     -shows you all the things that you have committed
git checkout -- filename    -to delete



GIT                                     PHOTO ALBUM

git      log           -->              looking through your photo album
git    status         -->              telling everyone I want to take a new picture
git                      -->              puts people in front of the camera
git                      -->


1. Work in the `wine_cellar.rb` file. There, you will find a variable, `wine_cellar`, that holds an array of hashes, each hash representing a wine.
1. Create a variable called `saved_for_special_occasion`. Assign it the third hash from the `wine_cellar` array (a Sauvignon Blanc from Wairau River).
1. Create a variable called `swill`. Assign it the fourth hash from the `wine_cellar` array (a Merlot from Tangley Oaks).
1. Your client misentered his data! Change the color of the Rutherford Hill Chardonney from "red" to "white".
1. Add a wine of your choice to the back of the cellar. Structure this wine as a hash, with key-value pairs for `:color`, `:type`, and `:label`.
1. Write a method, `retrieves_random_wine_for_party` which __removes__ a random wine from the cellar. Then use it several times, until you feel that the people upstairs are having a good time.

$variables          -->                 global variables, you can get it anywhere
                                                ex. $stdout.puts
local variables     --> specific to a function/method, etc
.shuffle
.each

paramter    --one argument  -->       make_groups


def phils_house(allergies)
name = "gary"
end

$soda = "coca cola"

def pjs_house($allergies)
name = "harry"
"#{name} loves #{soda}." Hates #{allergies}
end

gem env - will show you ruby info
-prewritten ruby code

